Instruções do projeto

Construa um algoritmo de ordenação, utilizando o método bubble sort estudado. 
(Lembre-se que se trata de uma série de instruções que devem ser seguidas passo a passo).
Para isso, você deve criar um método em que o tamanho do vetor seja dez e deve estar em ordem crescente.

O vetor deverá:
- comparar seus elementos dois a dois adjacentes;
- se os elementos não estiverem em ordem, então ordenar;
- senão, avançar para o próximo par;
- repetir a operação até que nenhuma troca possa ser feita no vetor inteiro.
---------------------------------------------------------------------------------------
RESPOSTA

Z = ""
AB = ""
BC = "" 
CD = ""
DE = ""
EF = ""
FG = ""
GH = ""
HI = ""
IJ = ""


escreva ("Insira dez números aleatórios")
escreva ("Número um", A)
leia (A)
escreva ("Número dois", B)
leia (B)
escreva ("Número tres", C)
leia (C)
escreva ("Número quatro", D)
leia (D)
escreva ("Número cinco", E)
leia (E)
escreva ("Número seis", F)
leia (F)
escreva ("Número sete", G)
leia (G)
escreva ("Número oito", H)
leia (H)
escreva ("Número nove", I)
leia (I)
escreva ("Número dez", J)
leia (J)

# Testando os termos adjacentes
# Testando A e B --------------------------------------------------------------------------
enquanto (AB = errado) faça
	se (A > B) entao
		Z <_ B
		B <_ A
		A <_ Z
	senao entao
		AB <_ certo
	fimse
# Testando B e C --------------------------------------------------------------------------
	enquanto (BC = errado) faça
		se (B > C) entao
			Z <_ C
			C <_ B
			B <_ Z
		senao entao
			BC <_ certo
		fimse
# Testando C e D --------------------------------------------------------------------------
		enquanto (CD = errado) faça
			se (C > D) entao
				Z <_ D
				D <_ C
			C <_ Z	
			senao entao
				CD <_ certo
			fimse
# Testando D e E --------------------------------------------------------------------------
			enquanto (DE = errado) faça
				se (D > E) entao
					Z <_ E	
					E <_ D
					D <_ Z
				senao entao
					DE <_ certo
				fimse
# Testando E e F --------------------------------------------------------------------------
				enquanto (EF = errado) faça
					se (E > F) entao
						Z <_ F
						F <_ E
						E <_ Z
					senao entao
						EF <_ certo
					fimse
# Testando F e G --------------------------------------------------------------------------
					enquanto (FG = errado) faça
						se (F > G) entao
							Z <_ G
							G <_ F
							F <_ Z
						senao entao
							FG <_ certo
						fimse
# Testando G e H --------------------------------------------------------------------------
						enquanto (GH = errado) faça
							se (G > H) entao
								Z <_ H
								H <_ G
								G <_ Z
							senao entao
								GH <_ certo
							fimse
# Testando H e I --------------------------------------------------------------------------
							enquanto (HI = errado) faça
								se (H > I) entao
									Z <_ I
									I <_ H
									H <_ Z
								senao entao
									HI <_ certo
								fimse

# Testando I e J --------------------------------------------------------------------------
								enquanto (IJ = errado) faça
									se (I > J) entao
										Z <_ J
										J <_ I
										I <_ Z
									senao entao
										IJ <_ certo
									fimse
#Testando a ordem crescente -------------------------------------------------------
									se (A > B) entao
										AB <_ errado
									senao entao
										AB <_ certo
									fimse
									se (B > C) entao
										BC <_ errado
									senao entao
										BC <_ certo
									fimse
									se (C > D) entao
										CD <_ errado
									senao entao
										CD <_ certo
									fimse
									se (D > E) entao
										DE <_ errado
									senao entao
										DE <_ certo
									fimse
									se (E > F) entao
										EF <_ errado
									senao entao
										EF <_ certo
									fimse
									se (F > G) entao
										FG <_ errado
									senao entao
										FG <_ certo
									fimse
									se (G > H) entao
										GH <_ errado
									senao entao
										GH <_ certo
									fimse
									se (H > I) entao
										HI <_ errado
									senao entao
										HI <_ certo
									fimse
									se (I > J) entao
										IJ <_ errado
									senao entao
										IJ <_ certo
									fimse
								fimenquanto
							fimenquanto
						fimenquanto
					fimeuquanto
				fimenquanto
			fimenquanto
		fimenquanto
	fimenquanto
fimenquanto
